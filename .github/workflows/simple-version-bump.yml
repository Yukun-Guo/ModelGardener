name: Simple Version Bump

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - '*.md'
      - 'pyproject.toml'  # Prevent infinite loop

jobs:
  version-bump:
    runs-on: ubuntu-latest
    
    # Only run if the push is not from the GitHub Actions bot
    if: github.actor != 'github-actions[bot]'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Bump version in pyproject.toml
      run: |
        python << 'EOF'
        import re
        
        # Read the current pyproject.toml
        with open('pyproject.toml', 'r') as f:
            content = f.read()
        
        # Find and extract current version
        version_match = re.search(r'version = "([^"]+)"', content)
        if not version_match:
            print("Could not find version in pyproject.toml")
            exit(1)
        
        current_version = version_match.group(1)
        print(f"Current version: {current_version}")
        
        # Parse and increment version
        version_parts = current_version.split('.')
        
        # Increment patch version
        if len(version_parts) >= 3:
            version_parts[2] = str(int(version_parts[2]) + 1)
        elif len(version_parts) == 2:
            version_parts.append('1')
        else:
            version_parts.extend(['0', '1'])
        
        new_version = '.'.join(version_parts)
        print(f"New version: {new_version}")
        
        # Replace version in content
        new_content = re.sub(
            r'version = "[^"]+"',
            f'version = "{new_version}"',
            content
        )
        
        # Write back to file
        with open('pyproject.toml', 'w') as f:
            f.write(new_content)
        
        print(f"Version bumped from {current_version} to {new_version}")
        EOF
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Commit and push version bump
      run: |
        git add pyproject.toml
        git commit -m "ðŸš€ Auto bump version in pyproject.toml"
        git push origin main
